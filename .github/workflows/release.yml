name: build

on:
  release:
    types:
      - created
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-natives:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./native
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup zig
        uses: mlugg/setup-zig@v2
        with:
          version: 0.14.1
      - name: Set executable permissions
        run: |
          chmod +x ./cmake/zig-cc
          chmod +x ./cmake/zig-ar

      - name: Build linux-x86_64 natives
        run: |
          mkdir -p linux-x86_64
          cd linux-x86_64
          cmake -DCMAKE_TOOLCHAIN_FILE="../cmake/zig-x86_64-linux-gnu.cmake" .. -G Ninja -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release
      - name: Upload linux-x86_64 natives
        uses: actions/upload-artifact@v4
        with:
          name: opus4j-linux-x86_64
          path: ./native/linux-x86_64/libopus4j.so

      - name: Build linux-aarch64 natives
        run: |
          mkdir -p linux-aarch64
          cd linux-aarch64
          cmake -DCMAKE_TOOLCHAIN_FILE="../cmake/zig-aarch64-linux-gnu.cmake" .. -G Ninja -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release
      - name: Upload linux-aarch64 natives
        uses: actions/upload-artifact@v4
        with:
          name: opus4j-linux-aarch64
          path: ./native/linux-aarch64/libopus4j.so

#      - name: Build macos-x86_64 natives
#        run: |
#          mkdir -p macos-x86_64
#          cd macos-x86_64
#          cmake -DCMAKE_TOOLCHAIN_FILE="../cmake/zig-x86_64-macos.cmake" .. -G Ninja -DCMAKE_BUILD_TYPE=Release
#          cmake --build . --config Release
#      - name: Upload macos-x86_64 natives
#        uses: actions/upload-artifact@v4
#        with:
#          name: opus4j-macos-x86_64
#          path: ./native/macos-x86_64/libopus4j.dylib

#      - name: Build macos-aarch64 natives
#        run: |
#          mkdir -p macos-aarch64
#          cd macos-aarch64
#          cmake -DCMAKE_TOOLCHAIN_FILE="../cmake/zig-aarch64-macos.cmake" .. -G Ninja -DCMAKE_BUILD_TYPE=Release
#          cmake --build . --config Release
#      - name: Upload macos-aarch64 natives
#        uses: actions/upload-artifact@v4
#        with:
#          name: opus4j-macos-aarch64
#          path: ./native/macos-aarch64/libopus4j.dylib

      - name: Build windows-x86_64 natives
        run: |
          mkdir -p windows-x86_64
          cd windows-x86_64
          cmake -DCMAKE_TOOLCHAIN_FILE="../cmake/zig-x86_64-windows-gnu.cmake" .. -G Ninja -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release
      - name: Upload windows-x86_64 natives
        uses: actions/upload-artifact@v4
        with:
          name: opus4j-windows-x86_64
          path: ./native/windows-x86_64/libopus4j.dll

  build-java-library:
    runs-on: ubuntu-latest
    needs: [build-natives]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Java 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
          server-id: henkelmax.public
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Download linux-x86_64
        uses: actions/download-artifact@v4
        with:
          name: opus4j-linux-x86_64
          path: ./src/main/resources/natives/linux-x64/
      - name: Download linux-aarch64
        uses: actions/download-artifact@v4
        with:
          name: opus4j-linux-aarch64
          path: ./src/main/resources/natives/linux-aarch64/
#      - name: Download macos-x86_64
#        uses: actions/download-artifact@v4
#        with:
#          name: opus4j-macos-x86_64
#          path: ./src/main/resources/natives/mac-x64/
#      - name: Download macos-aarch64
#        uses: actions/download-artifact@v4
#        with:
#          name: opus4j-macos-aarch64
#          path: ./src/main/resources/natives/mac-aarch64/
      - name: Download windows-x86_64
        uses: actions/download-artifact@v4
        with:
          name: opus4j-windows-x86_64
          path: ./src/main/resources/natives/windows-x64/
      - name: Build and deploy
        run: |
          chmod +x ./gradlew
          ./gradlew build
          mkdir -p release
          cp $(find ./build/libs -maxdepth 1 -type f -name "*.jar") ./release/
#          ./gradlew publish
#        env:
#           MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
#           MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      - uses: actions/upload-artifact@v4
        with:
          name: opus4j-java
          path: ./release/
      - name: Upload release asset
        uses: AButler/upload-release-assets@v3.0
        with:
          files: ./release/*
          repo-token: ${{ secrets.GITHUB_TOKEN }}